package main

import (
	"encoding/json"
	"flag"
	"fmt"
	"<%= 'undefined' === typeof moduleName ? 'main' : moduleName %>"
	"<%= 'undefined' === typeof moduleName ? 'main' : moduleName %>/cli/commands"
	"os"
)

func main() {
	if len(os.Args) < 2 {
		fmt.Println("Syntax: <%= packageName %> <action>")
		os.Exit(1)
	}

	pEnv := flag.String("env", "default", "api env to target")
	pUsername := flag.String("username", "", "api username to use")
	pPassword := flag.String("password", "", "api password to use")

	flag.Parse()
	action := flag.Arg(0)

	cmd, ok := commands.Commands[action]

	if !ok {
		fmt.Println("Error: unrecognized action '" + action + "'")
		os.Exit(2)
	}

	sdk := <%= packageName %>.CreateEnvSdk(*pEnv, *pUsername, *pPassword)

	r, err := cmd(sdk)

	if err != nil {
		fmt.Println("ERROR: " + err.Error())
		os.Exit(3)
	}
	if r == nil {
		os.Exit(0)
	}

	s, err2 := json.MarshalIndent(r, "", "\t")
	if err2 != nil {
		fmt.Println("ERROR: " + err2.Error())
		os.Exit(4)
	}

	fmt.Println(string(s))
}
